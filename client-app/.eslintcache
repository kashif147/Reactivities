[{"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"2","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"3","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"4","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"5","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"7","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"8","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx":"9","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx":"10","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts":"11","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"12","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"13","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx":"14","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"15","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"16","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"17","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"18","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"19","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts":"20","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx":"21","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"22","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts":"23","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts":"24","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\modelStore.ts":"25","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"26","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx":"27","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx":"28","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx":"29","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"30","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"31"},{"size":956,"mtime":1609621751649,"results":"32","hashOfConfig":"33"},{"size":607,"mtime":1564794500000,"results":"34","hashOfConfig":"33"},{"size":1489,"mtime":1609621751649,"results":"35","hashOfConfig":"33"},{"size":1574,"mtime":1610353535230,"results":"36","hashOfConfig":"33"},{"size":300,"mtime":1564794500000,"results":"37","hashOfConfig":"33"},{"size":941,"mtime":1610403775918,"results":"38","hashOfConfig":"33"},{"size":6003,"mtime":1611091369762,"results":"39","hashOfConfig":"33"},{"size":893,"mtime":1610901490974,"results":"40","hashOfConfig":"33"},{"size":655,"mtime":1609622820609,"results":"41","hashOfConfig":"33"},{"size":819,"mtime":1564794500000,"results":"42","hashOfConfig":"33"},{"size":770,"mtime":1610983326266,"results":"43","hashOfConfig":"33"},{"size":2101,"mtime":1610984465272,"results":"44","hashOfConfig":"33"},{"size":1582,"mtime":1610317166064,"results":"45","hashOfConfig":"33"},{"size":1009,"mtime":1609622785089,"results":"46","hashOfConfig":"33"},{"size":5299,"mtime":1610293543820,"results":"47","hashOfConfig":"33"},{"size":1479,"mtime":1610901206823,"results":"48","hashOfConfig":"33"},{"size":884,"mtime":1610293410392,"results":"49","hashOfConfig":"33"},{"size":2208,"mtime":1610318395184,"results":"50","hashOfConfig":"33"},{"size":339,"mtime":1564794500000,"results":"51","hashOfConfig":"33"},{"size":1590,"mtime":1610399622740,"results":"52","hashOfConfig":"33"},{"size":2100,"mtime":1610397919063,"results":"53","hashOfConfig":"33"},{"size":2582,"mtime":1610985198700,"results":"54","hashOfConfig":"33"},{"size":763,"mtime":1610318432732,"results":"55","hashOfConfig":"33"},{"size":732,"mtime":1610352760540,"results":"56","hashOfConfig":"33"},{"size":569,"mtime":1610353681762,"results":"57","hashOfConfig":"33"},{"size":538,"mtime":1610353498202,"results":"58","hashOfConfig":"33"},{"size":696,"mtime":1610403219806,"results":"59","hashOfConfig":"33"},{"size":2486,"mtime":1610403312581,"results":"60","hashOfConfig":"33"},{"size":770,"mtime":1610984277994,"results":"61","hashOfConfig":"33"},{"size":1671,"mtime":1611091635736,"results":"62","hashOfConfig":"33"},{"size":2136,"mtime":1610984924991,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1b02lrw",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\index.tsx",[],["130","131"],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\TextAreaInput.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\SelectInput.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\util\\util.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",["132"],"import React, { useContext } from \"react\";\nimport { Menu, Container, Button, Dropdown, Image } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\n\nconst NavBar: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {isLoggedIn, user, logout} = rootStore.userStore;\n  return (\n    <Menu fixed='top' inverted>\n      <Container>\n        <Menu.Item header as={NavLink} exact to='/'>\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item name='Activities' as={NavLink} to='/activities' />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to='/createActivity'\n            positive\n            content='Create Activity'\n          />\n        </Menu.Item>\n        {user && (\n          <Menu.Item position='right'>\n            <Image avatar spaced='right' src={user.image || \"/assets/user.png\"} />\n            <Dropdown pointing='top left' text={user.displayName}>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  as={Link}\n                  to={`/profile/username`}\n                  text='My profile'\n                  icon='user'\n                />\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n        )}\n      </Container>\n    </Menu>\n  );\n};\n\nexport default observer(NavBar);\n","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\DateInput.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["133"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Segment, Form, Button, Grid } from 'semantic-ui-react';\nimport { ActivityFormValues } from '../../../app/models/activity';\nimport { v4 as uuid } from 'uuid';\nimport ActivityStore from '../../../app/stores/activityStore';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport TextInput from '../../../app/common/form/TextInput';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport SelectInput from '../../../app/common/form/SelectInput';\nimport DateInput from '../../../app/common/form/DateInput';\nimport { category } from '../../../app/common/options/categoryOptions';\nimport { combineDateAndTime } from '../../../app/common/util/util';\nimport {\n  combineValidators,\n  isRequired,\n  composeValidators,\n  hasLengthGreaterThan\n} from 'revalidate';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\n\nconst validate = combineValidators({\n  title: isRequired({ message: 'The event title is required' }),\n  category: isRequired('Category'),\n  description: composeValidators(\n    isRequired('Description'),\n    hasLengthGreaterThan(4)({\n      message: 'Description needs to be at least 5 characters'\n    })\n  )(),\n  city: isRequired('City'),\n  venue: isRequired('Venue'),\n  date: isRequired('Date'),\n  time: isRequired('Time')\n});\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createActivity,\n    editActivity,\n    submitting,\n    loadActivity\n  } = rootStore.activityStore;\n\n  const [activity, setActivity] = useState(new ActivityFormValues());\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (match.params.id) {\n      setLoading(true);\n      loadActivity(match.params.id)\n        .then(activity => {\n          setActivity(new ActivityFormValues(activity));\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [loadActivity, match.params.id]);\n\n  const handleFinalFormSubmit = (values: any) => {\n    const dateAndTime = combineDateAndTime(values.date, values.time);\n    const { date, time, ...activity } = values;\n    activity.date = dateAndTime;\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid()\n      };\n      createActivity(newActivity);\n    } else {\n      editActivity(activity);\n    }\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment clearing>\n          <FinalForm\n            validate={validate}\n            initialValues={activity}\n            onSubmit={handleFinalFormSubmit}\n            render={({ handleSubmit, invalid, pristine }) => (\n              <Form onSubmit={handleSubmit} loading={loading}>\n                <Field\n                  name='title'\n                  placeholder='Title'\n                  value={activity.title}\n                  component={TextInput}\n                />\n                <Field\n                  name='description'\n                  placeholder='Description'\n                  rows={3}\n                  value={activity.description}\n                  component={TextAreaInput}\n                />\n                <Field\n                  component={SelectInput}\n                  options={category}\n                  name='category'\n                  placeholder='Category'\n                  value={activity.category}\n                />\n                <Form.Group widths='equal'>\n                  <Field\n                    component={DateInput}\n                    name='date'\n                    date={true}\n                    placeholder='Date'\n                    value={activity.date}\n                  />\n                  <Field\n                    component={DateInput}\n                    name='time'\n                    time={true}\n                    placeholder='Time'\n                    value={activity.time}\n                  />\n                </Form.Group>\n\n                <Field\n                  component={TextInput}\n                  name='city'\n                  placeholder='City'\n                  value={activity.city}\n                />\n                <Field\n                  component={TextInput}\n                  name='venue'\n                  placeholder='Venue'\n                  value={activity.venue}\n                />\n                <Button\n                  loading={submitting}\n                  disabled={loading || invalid || pristine}\n                  floated='right'\n                  positive\n                  type='submit'\n                  content='Submit'\n                />\n                <Button\n                  onClick={\n                    activity.id\n                      ? () => history.push(`/activities/${activity.id}`)\n                      : () => history.push('/activities')\n                  }\n                  disabled={loading}\n                  floated='right'\n                  type='button'\n                  content='Cancel'\n                />\n              </Form>\n            )}\n          />\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityForm);\n","C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],["134","135"],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\user\\LoginForm.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["136","137","138"],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\stores\\modelStore.ts",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\app\\common\\form\\ErrorMessage.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\user\\RegisterForm.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendees.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\Users\\kashif\\Documents\\Personal\\dotNetCore_React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":9,"column":10,"nodeType":"145","messageId":"146","endLine":9,"endColumn":20},{"ruleId":"143","severity":1,"message":"147","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":21},{"ruleId":"139","replacedBy":"148"},{"ruleId":"141","replacedBy":"149"},{"ruleId":"143","severity":1,"message":"150","line":6,"column":10,"nodeType":"145","messageId":"146","endLine":6,"endColumn":16},{"ruleId":"143","severity":1,"message":"151","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":12},{"ruleId":"152","severity":1,"message":"153","line":66,"column":1,"nodeType":"154","endLine":69,"endColumn":2},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"@typescript-eslint/no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'ActivityStore' is defined but never used.",["155"],["156"],"'config' is defined but never used.","'id' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]